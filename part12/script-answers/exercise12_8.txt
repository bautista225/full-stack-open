Script started on 2025-01-17 17:06:09+01:00 [TERM="xterm-256color" TTY="/dev/pts/6" COLUMNS="125" LINES="25"]
$ docker exec -ti todo-backend-mongo-1 bash
root@d1a3389356a3:/# mongosh -u root -p example
mongosh mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000Current Mongosh Log ID:	678a800a81785270a1e94969
Connecting to:		[1m[32mmongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.3.4[0m
Using MongoDB:		8.0.4
[1m[33mUsing Mongosh[0m:		2.3.4

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

[1G[0J [1G[1m[33m------[0m
   [1m[33mThe server generated these startup warnings when booting[0m
   2025-01-17T16:03:56.061+00:00: For customers running the current memory allocator, we suggest changing the contents of the following sysfsFile
   2025-01-17T16:03:56.061+00:00: We suggest setting the contents of sysfsFile to 0.
   2025-01-17T16:03:56.061+00:00: Your system has glibc support for rseq built in, which is not yet supported by tcmalloc-google and has critical performance implications. Please set the environment variable GLIBC_TUNABLES=glibc.pthread.rseq=0
   2025-01-17T16:03:56.061+00:00: vm.max_map_count is too low
   2025-01-17T16:03:56.061+00:00: We suggest setting swappiness to 0 or 1, as swapping can cause performance problems.
[1m[33m------[0m

[1G[0Jtest> [7Gshow dbs

[1madmin[0m         100.00 KiB
[1mconfig[0m         12.00 KiB
[1mlocal[0m          72.00 KiB
[1mthe_database[0m   40.00 KiB
[1G[0Jtest> [7Guse the_database

switched to db the_database
[1G[0Jthe_database> [15Gshow collections

[1mtodos[0m
[1G[0Jthe_database> [15Gdb.todos.find({})

[
  {
    _id: ObjectId([32m'678a7f62f8b070309ae9496a'[39m),
    text: [32m'Write code'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId([32m'678a7f62f8b070309ae9496b'[39m),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15G[1G[0Jthe_database> db.todos.insertOne({ [33mtext[39m: [32m"Nueva tarea de ejemplo"[39m, [33mdone[39m: [33mfalse[39m })[82G[1G[0Jthe_database> db.todos.find().pretty()[39G

[
  {
    _id: ObjectId([32m'678a7f62f8b070309ae9496a'[39m),
    text: [32m'Write code'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId([32m'678a7f62f8b070309ae9496b'[39m),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId([32m'678a80bd81785270a1e9496b'[39m),
    text: [32m'Nueva tarea de ejemplo'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15Gexit

[?2004hroot@d1a3389356a3:/# ecxit    xit
[?2004l
exit
0;part12-containers-applications/todo-app/todo-backend[01;32m[00m:[01;34m[00m$ exit
[?2004l
exit

Script done on 2025-01-17 17:09:59+01:00 [COMMAND_EXIT_CODE="0"]
